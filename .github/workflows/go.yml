# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      TEST_LOCATION: test_report
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: |
        go install github.com/jstemmer/go-junit-report@latest
        go generate ./...
        go test -v ./... | go-junit-report -set-exit-code > report2.xml  

    - name: Test Summary
      uses: test-summary/action@v1
      with:
        paths: |
          ${{ env.TEST_LOCATION }}/report2.xml            
      if: always()

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: report2.xml
    #     path: report2.xml
    
    # - name: Download artifact
    #   uses: actions/download-artifact@v3
    #   with:
    #     # name: test_output.json
    #     path: download
    
    # - name: Publish Test Results
    #   uses: EnricoMi/publish-unit-test-result-action@v2
    #   if: always()
    #   with:
    #     junit_files: "download/report2.xml"

