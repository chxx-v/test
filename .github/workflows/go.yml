# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      TEST_LOCATION: test_report
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    # - name: Test
    #   run: |
    #     go install github.com/jstemmer/go-junit-report@latest
    #     go generate ./...
    #     go test -v ./... | go-junit-report -set-exit-code > report.xml  

    - name: Test
      run: |
        go install github.com/jstemmer/go-junit-report/v2@latest
        go generate ./...
        go test -json 2>&1 | go-junit-report -parser gojson > report.xml  
    
    # - name: Test
    #   run: |
    #     go install github.com/jstemmer/go-junit-report@latest
    #     go test -v -json > report.json
    #     gotestsum convert --input report.json --junitxml report.xml

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: report.xml
        path: report.xml
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: report.xml
        path: ${{ env.TEST_LOCATION }}
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        # files: "${{ env.TEST_LOCATION }}/**/*.json"
        files: |
          ${{ env.TEST_LOCATION }}/**/*.xml
          ${{ env.TEST_LOCATION }}/**/*.json
