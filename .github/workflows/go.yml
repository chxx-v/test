# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      TEST_LOCATION: test_report
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      if: (failure() || success()) && steps.build.conclusion == 'success'
      run: go test -v ./... -coverprofile ${{ env.TEST_LOCATION }}/cover.out

    - name: Coverage Report
      run: go tool cover -html=${{ env.TEST_LOCATION }}/cover.out -o ${{ env.TEST_LOCATION }}/coverage.html

    - name: Upload the coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: ${{ github.workspace }}/coverage.html
    # - name: Test
    #   run: |
    #     go install github.com/jstemmer/go-junit-report@latest
    #     go generate ./...
    #     go test -v ./... | go-junit-report -set-exit-code > report.xml  

    # - name: Upload artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: report.xml
    #     path: report.xml
    
    # - name: Download artifact
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: report.xml
    #     path: ${{ env.TEST_LOCATION }}
    
    # - name: Publish Test Results
    #   uses: EnricoMi/publish-unit-test-result-action@v2
    #   if: always()
    #   with:
    #     files: |
    #       ${{ env.TEST_LOCATION }}/**/*.xml
